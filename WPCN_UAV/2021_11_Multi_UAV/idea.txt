외판원 순회 문제와 유사하므로, 유전알고리즘 기반 방법 + 딥러닝 적용

딥러닝:
입력: device가 주어진 그림을 입력 이미지 크기에 맞춰 확대한 것
출력: 유전알고리즘의 파라미터의 case에 따른 minimum throughput

[아이디어 2]
딥러닝:

<반복학습 알고리즘 적용>
입력: HAP를 중심으로 한 주변 n*n meter의 device의 배치
(받은 throughput의 (-1.0 ~ 1.0 기준 min-max) 값 적용, 해당 부분의 주변으로 3x3칸만큼 적용)

출력: 각 방향으로 이동했을 때의 throughput 효율성
 = (min throughput 증가량) / (throughput 증가량의 최댓값)

<선행>
각 device별 throughput을 좌표로 나타낸 그래프로 표시

2022/02/01
 - 입력: 해당 cluster의 device map (cluster center 부근을 -1, 각 device 부근을 +1), 알고리즘의 파라미터
 - 출력: 최종 common throughput
 - 알고리즘의 파라미터의 최적 setting을 탐색

 - Genetic Algorithm 기준
   - 이동 방향 자체를 바꾸는 대신 2개의 이동 순서를 바꾸는 확률을 부분적으로 이용 V
   - output이 항상 0 이상이므로, output activation function을 Sigmoid에서 tanh 함수로 변경 V
   - 더 좋은 path에 대한 판정 우선순위 변경 V
 - 추후 sqDist와 거리의 비의 값에 따라 -1, 1이 아닌 0.5, -0.5와 같은 중간의 값을 적용, 이에 따라 sqDist의 값 조절 V
 - Window size를 10 -> 15 (12) 로 증가 V

 - 새로운 알고리즘의 파라미터에는 이동 크기 추가
 
[아이디어 3]
 - 알고리즘 :
   - 1. 유전알고리즘과 유사한 알고리즘을 이용, 처음에 device 간 이동순서를 랜덤으로 초기화하고 이동순서를 랜덤하게 swap시켜 가장 짧은 최적 경로를 구성
     - 최적 경로 : A*(전체 이동거리) + B*(해당 경로로 최단 이동횟수로 이동 시, "1/d^2"의 합)
       - 여기서 "1/d^2"는 device와 UAV 간의 거리에 반비례하는 값의 제곱
   - 2. 이 최적 경로대로 경로를 이동하여 common throughput을 측정
 - 입력 :
   - 1. 각 cluster의 device의 위치를 그림으로 나타낸 것 (각 device의 x좌표, y좌표의 평균을 이용, 1칸은 1.0m, 해당 좌표는 1.0, 주변 4칸은 0.5로)
   - 2. 인수 1: 해당 알고리즘의 각각의 인접한 이동순서의 swap 확률 (iteration 횟수는 일정)
   - 3. 인수 2: 최적 경로 탐색에서의 가중치 A와 B의 비율
 - 출력 :
   - common (minimum) throughput
 - 경로 결정 :
   - 모델을 학습시킨 다음, (인수 1, 인수 2)를 brute force 하여 모델 예측을 기준으로 최적 common throughput이 도출되는 인수의 쌍을 찾은 다음,
     그 인수의 쌍을 이용하여 경로 결정 후 실제 common throughput을 측정
